% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_store_local.R
\name{class_store_local}
\alias{class_store_local}
\alias{store_local}
\title{Local store class.}
\description{
\code{R6} class for a local store. Worker files are on disk
on the same machine that manages the crew.
}
\examples{
store <- class_store_local$new()
store$write_output("worker_name", list(value = "job_output"))
store$read_output("worker_name")
}
\section{Super class}{
\code{\link[crew:store]{crew::store}} -> \code{store_local}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{dir_temp}}{Character of length 1, directory for temporary files.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{class_store_local$new()}}
\item \href{#method-path_temp}{\code{class_store_local$path_temp()}}
\item \href{#method-read_input}{\code{class_store_local$read_input()}}
\item \href{#method-read_output}{\code{class_store_local$read_output()}}
\item \href{#method-write_input}{\code{class_store_local$write_input()}}
\item \href{#method-write_output}{\code{class_store_local$write_output()}}
\item \href{#method-exists_input}{\code{class_store_local$exists_input()}}
\item \href{#method-exists_output}{\code{class_store_local$exists_output()}}
\item \href{#method-delete_input}{\code{class_store_local$delete_input()}}
\item \href{#method-delete_output}{\code{class_store_local$delete_output()}}
\item \href{#method-destroy}{\code{class_store_local$destroy()}}
\item \href{#method-marshal}{\code{class_store_local$marshal()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="crew" data-topic="store" data-id="path_input">}\href{../../crew/html/store.html#method-path_input}{\code{crew::store$path_input()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crew" data-topic="store" data-id="path_output">}\href{../../crew/html/store.html#method-path_output}{\code{crew::store$path_output()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crew" data-topic="store" data-id="validate">}\href{../../crew/html/store.html#method-validate}{\code{crew::store$validate()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Store constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$new(dir_root = tempfile())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dir_root}}{Character of length 1, file path or prefix
where all the files are located.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{new()} method calls the constructor and returns a new
data store object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-path_temp"></a>}}
\if{latex}{\out{\hypertarget{method-path_temp}{}}}
\subsection{Method \code{path_temp()}}{
Path to a worker's temporary file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$path_temp(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Worker name.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Temporary files are staging areas for writing large data.
In the write methods, the file is written to the temporary file
and then moved over to the permanent location. This safeguards
against corrupted persistent files that may result if
the file is not finished writing and R crashes.
}

\subsection{Returns}{
Character of length 1, path to the worker's temporary file.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-read_input"></a>}}
\if{latex}{\out{\hypertarget{method-read_input}{}}}
\subsection{Method \code{read_input()}}{
Read worker input.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$read_input(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character of length 1, Worker name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Input data sent to a worker. Should contain a job
and required data to run it.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-read_output"></a>}}
\if{latex}{\out{\hypertarget{method-read_output}{}}}
\subsection{Method \code{read_output()}}{
Read worker output.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$read_output(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character of length 1, Worker name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Output data returned from a worker. Should contain
the result of a job.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-write_input"></a>}}
\if{latex}{\out{\hypertarget{method-write_input}{}}}
\subsection{Method \code{write_input()}}{
Write worker input.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$write_input(name, data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character of length 1, Worker name.}

\item{\code{data}}{Data to write. Should contain a job and the required
data to run it.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-write_output"></a>}}
\if{latex}{\out{\hypertarget{method-write_output}{}}}
\subsection{Method \code{write_output()}}{
Write worker output.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$write_output(name, data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character of length 1, Worker name.}

\item{\code{data}}{Data to write. Should contain the result of a job.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-exists_input"></a>}}
\if{latex}{\out{\hypertarget{method-exists_input}{}}}
\subsection{Method \code{exists_input()}}{
Check if worker input exists.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$exists_input(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character of length 1, Worker name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{TRUE} if worker input exists and \code{FALSE} otherwise.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-exists_output"></a>}}
\if{latex}{\out{\hypertarget{method-exists_output}{}}}
\subsection{Method \code{exists_output()}}{
Check if worker output exists.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$exists_output(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character of length 1, Worker name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{TRUE} if worker input exists and \code{FALSE} otherwise.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-delete_input"></a>}}
\if{latex}{\out{\hypertarget{method-delete_input}{}}}
\subsection{Method \code{delete_input()}}{
Delete worker input.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$delete_input(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character of length 1, Worker name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-delete_output"></a>}}
\if{latex}{\out{\hypertarget{method-delete_output}{}}}
\subsection{Method \code{delete_output()}}{
Delete worker output.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$delete_output(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character of length 1, Worker name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-destroy"></a>}}
\if{latex}{\out{\hypertarget{method-destroy}{}}}
\subsection{Method \code{destroy()}}{
Delete all the files in the data store.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$destroy()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character of length 1, Worker name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-marshal"></a>}}
\if{latex}{\out{\hypertarget{method-marshal}{}}}
\subsection{Method \code{marshal()}}{
Marshal the \code{R6} store object to ship to a worker.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{class_store_local$marshal()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character of length 1 with R code to run to reconstruct
the store on a worker.
}
}
}
