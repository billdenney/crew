% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crew_mirai_launcher_callr.R
\name{crew_mirai_launcher_callr}
\alias{crew_mirai_launcher_callr}
\title{Create a \code{mirai} launcher with \code{callr} workers.}
\usage{
crew_mirai_launcher_callr(
  idle_time = Inf,
  wall_time = Inf,
  poll_high = 5,
  poll_low = 50,
  launch_timeout = 5,
  launch_wait = 0.1,
  max_tasks = Inf,
  async_dial = TRUE
)
}
\arguments{
\item{idle_time}{Maximum number of seconds that a worker can idle
since the completion of the last task. If exceeded, the worker exits.}

\item{wall_time}{Soft wall time in seconds. See the \code{wall_time}
argument of \code{mirai::server()}.}

\item{poll_high}{High polling interval in seconds for the \code{mirai}
active queue.}

\item{poll_low}{Low polling interval in seconds for the \code{mirai}
active queue.}

\item{launch_timeout}{Number of seconds to time out
waiting for a new group of workers to launch.}

\item{launch_wait}{Number of seconds to wait between checks
that newly launched workers are ready to receive tasks.}

\item{max_tasks}{Maximum number of tasks that a worker will do before
exiting.}

\item{async_dial}{Logical, whether the \code{mirai} workers should dial in
asynchronously. See the \code{asyncdial} argument of \code{mirai::server()}.}
}
\description{
Create an \code{R6} object to launch and maintain
\code{callr} workers for a \code{mirai} controller.
}
\examples{
if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
router <- crew_mirai_router()
router$connect()
launcher <- crew_mirai_launcher_callr()
launcher$populate(sockets = router$sockets_listening())
launcher$running() # 0
launcher$launch()
launcher$running() # 1
launcher$terminate()
launcher$running() # 0
router$disconnect()
}
}
\seealso{
Other mirai: 
\code{\link{crew_class_mirai_controller}},
\code{\link{crew_class_mirai_launcher_callr}},
\code{\link{crew_class_mirai_router}},
\code{\link{crew_mirai_controller}()},
\code{\link{crew_mirai_router}()}
}
\concept{mirai}
\keyword{internal}
