% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crew_worker.R
\name{crew_worker}
\alias{crew_worker}
\title{Worker event loop.}
\usage{
crew_worker(worker, store, max_tasks, timeout, wait)
}
\arguments{
\item{worker}{Character of length 1, name of the worker.}

\item{store}{Either a data store object or a character string
with a marshaled data store.}

\item{max_tasks}{Maximum number of tasks before returning.}

\item{timeout}{Positive numeric of length 1, number of seconds
that a worker can idle before timing out.}

\item{wait}{Positive numeric of length 1, number of seconds
that the worker waits between checking if a task exists.}
}
\value{
\code{NULL} (invisibly).
}
\description{
Not a user-side function. Do not invoke directly.
}
\details{
The worker event loop runs inside the underlying process
of a worker. It waits for the next task (timing out
if it idles for too long at one time) runs any incoming tasks
and puts the output in the data store.
}
\examples{
if (!identical(Sys.getenv("CREW_EXAMPLES", unset = ""), "")) {
root <- tempfile()
dir.create(root)
store <- crew_store_local$new(root = root)
fun <- function(x) {
  x + 1
}
args <- list(x = 1)
value <- list(fun = deparse(fun), args = args)
store$write_input(worker = "my_worker", value = value)
crew_worker(
  worker = "my_worker",
  store = store$marshal(),
  max_tasks = 1,
  timeout = 0,
  wait = 0
)
store$read_output("my_worker")$result # 2
}
}
\keyword{internal}
