% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crew_queue_session.R
\name{crew_queue_session}
\alias{crew_queue_session}
\title{Local session queue}
\description{
Task queue with \code{callr::r_session} workers.
}
\details{
Some public methods are inherited from \link{crew_queue}.
See the \link{crew_queue} help file for details on those.

The session queue is a slightly enhanced version of
\url{https://www.tidyverse.org/blog/2019/09/callr-task-q/},
with the ability to detect crashes and block the R session
until the backlog clears. See the "Queue attribution"
section, the \code{crew} \code{README.md} file, and the \code{crew} \code{NOTICE} file
for attribution.
}
\section{Queue attribution}{

The design and implementation of \code{crew} task queues, especially
the local \code{callr}-based task queues, borrows heavily from
the work of Gábor Csárdi, particularly
\url{https://www.tidyverse.org/blog/2019/09/callr-task-q/},
which was also released in commit
\verb{811a02f604de2cf03264f6b35ce9ec8a412f2581}
of \url{https://github.com/r-lib/callr} in the
\code{vignettes/Task-queue-with-callr.Rmd}
file under the MIT license. See the \code{crew} package \code{README.md} and
\code{NOTICE} files for other mentions of this attribution.
}

\examples{
fun <- function(x) x + 1
args <- list(x = 1)
queue <- crew_queue_session$new(timeout = 60, wait = 0.1)
queue$push(fun = fun, args = args)
queue$block()
result <- queue$pop()
str(result)
result$result$result
queue$shutdown()
processx::supervisor_kill()
}
\seealso{
Other queue: 
\code{\link{crew_queue_bg}},
\code{\link{crew_queue_future}},
\code{\link{crew_queue}}
}
\concept{queue}
\section{Super class}{
\code{\link[crew:crew_queue]{crew::crew_queue}} -> \code{crew_queue_session}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{crew_queue_session$new()}}
\item \href{#method-push}{\code{crew_queue_session$push()}}
\item \href{#method-shutdown}{\code{crew_queue_session$shutdown()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="crew" data-topic="crew_queue" data-id="block">}\href{../../crew/html/crew_queue.html#method-block}{\code{crew::crew_queue$block()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crew" data-topic="crew_queue" data-id="crashed">}\href{../../crew/html/crew_queue.html#method-crashed}{\code{crew::crew_queue$crashed()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crew" data-topic="crew_queue" data-id="get_results">}\href{../../crew/html/crew_queue.html#method-get_results}{\code{crew::crew_queue$get_results()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crew" data-topic="crew_queue" data-id="get_tasks">}\href{../../crew/html/crew_queue.html#method-get_tasks}{\code{crew::crew_queue$get_tasks()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crew" data-topic="crew_queue" data-id="get_workers">}\href{../../crew/html/crew_queue.html#method-get_workers}{\code{crew::crew_queue$get_workers()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crew" data-topic="crew_queue" data-id="pop">}\href{../../crew/html/crew_queue.html#method-pop}{\code{crew::crew_queue$pop()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crew" data-topic="crew_queue" data-id="update">}\href{../../crew/html/crew_queue.html#method-update}{\code{crew::crew_queue$update()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Local session queue constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_queue_session$new(workers = 1, timeout = 60, wait = 0.1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{workers}}{Number of workers in the queue.}

\item{\code{timeout}}{Number of seconds to for a worker to wait
for something to happen (e.g. worker initialization)
before timing out and quitting.}

\item{\code{wait}}{Number of seconds to wait in between iterations while
waiting for something to happen (e.g. worker initialization).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A local session queue object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-push"></a>}}
\if{latex}{\out{\hypertarget{method-push}{}}}
\subsection{Method \code{push()}}{
Push a new task on to the queue.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_queue_session$push(fun, args = list(), task = crew_name(), update = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{R function that runs the task.}

\item{\code{args}}{Named list of arguments to \code{fun}.}

\item{\code{task}}{Character of length 1 with the task ID.}

\item{\code{update}}{Logical of length 1, whether to update the
internal state of the queue after pushing. See the
\code{update()} method for details.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-shutdown"></a>}}
\if{latex}{\out{\hypertarget{method-shutdown}{}}}
\subsection{Method \code{shutdown()}}{
Shut down the workers.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_queue_session$shutdown()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{NULL} (invisibly)
}
}
}
