% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crew_store.R
\name{crew_store}
\alias{crew_store}
\title{Abstract store}
\description{
Abstract class for a data store.
}
\details{
Most \code{crew} queues use data stores to send and receive task data.
Some use entirely local data, others may use cloud data to support
cloud workers. Stores have a "main" file space and a "worker" file space.
The main file space is usually on the local machine, and the worker
file space may be in the cloud. Sending and collecting data may involve
shuffling files to and and the worker file space.
}
\examples{
# Usage on its own:
store <- crew_store_local$new(timeout = Inf)
store$write_input("worker", list(value = "x"))
store$list_input()
store$exists_input("worker")
store$read_input("worker")
# Usage in a queue:
fun <- function(x) x + 1
args <- list(x = 1)
queue <- crew_queue_future$new(timeout = 60, store = store)
queue$push(fun = fun, args = args)
queue$block()
result <- queue$pop()
str(result)
result$result$result
queue$shutdown()
processx::supervisor_kill()
store$destroy()
}
\seealso{
Other store: 
\code{\link{crew_store_local}}
}
\concept{store}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{crew_store$new()}}
\item \href{#method-get_root}{\code{crew_store$get_root()}}
\item \href{#method-read_input}{\code{crew_store$read_input()}}
\item \href{#method-read_output}{\code{crew_store$read_output()}}
\item \href{#method-write_input}{\code{crew_store$write_input()}}
\item \href{#method-write_output}{\code{crew_store$write_output()}}
\item \href{#method-exists_input}{\code{crew_store$exists_input()}}
\item \href{#method-exists_output}{\code{crew_store$exists_output()}}
\item \href{#method-list_input}{\code{crew_store$list_input()}}
\item \href{#method-list_output}{\code{crew_store$list_output()}}
\item \href{#method-delete_input}{\code{crew_store$delete_input()}}
\item \href{#method-delete_output}{\code{crew_store$delete_output()}}
\item \href{#method-path_log}{\code{crew_store$path_log()}}
\item \href{#method-marshal}{\code{crew_store$marshal()}}
\item \href{#method-destroy}{\code{crew_store$destroy()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Abstract store constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$new(root = tempfile(), timeout = 60, wait = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{root}}{Character of length 1, root directory of the data store
on the local file system.}

\item{\code{timeout}}{Numeric of length 1, number of seconds to wait
to receive worker input or shuffle files in the worker loop.}

\item{\code{wait}}{Numeric of length 1, number of seconds to pause between
iterations waiting for files to arrive in their proper places
in internal operations.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An abstract store object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_root"></a>}}
\if{latex}{\out{\hypertarget{method-get_root}{}}}
\subsection{Method \code{get_root()}}{
Get the root directory of the data store.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$get_root()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The root directory of the data store.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-read_input"></a>}}
\if{latex}{\out{\hypertarget{method-read_input}{}}}
\subsection{Method \code{read_input()}}{
Read worker input data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$read_input(worker)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{worker}}{Character of length 1, name of the worker.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Worker input data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-read_output"></a>}}
\if{latex}{\out{\hypertarget{method-read_output}{}}}
\subsection{Method \code{read_output()}}{
Read worker output data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$read_output(worker)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{worker}}{Character of length 1, name of the worker.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Worker output data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-write_input"></a>}}
\if{latex}{\out{\hypertarget{method-write_input}{}}}
\subsection{Method \code{write_input()}}{
Write worker input data to the main file space.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$write_input(worker, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{worker}}{Character of length 1, name of the worker.}

\item{\code{value}}{R object to write.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-write_output"></a>}}
\if{latex}{\out{\hypertarget{method-write_output}{}}}
\subsection{Method \code{write_output()}}{
Write worker output data to the main file space.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$write_output(worker, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{worker}}{Character of length 1, name of the worker.}

\item{\code{value}}{R object to output.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-exists_input"></a>}}
\if{latex}{\out{\hypertarget{method-exists_input}{}}}
\subsection{Method \code{exists_input()}}{
Check if worker input data exists.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$exists_input(worker)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{worker}}{Character of length 1, name of the worker.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical of length 1, whether worker input data exists.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-exists_output"></a>}}
\if{latex}{\out{\hypertarget{method-exists_output}{}}}
\subsection{Method \code{exists_output()}}{
Check if worker output data exists.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$exists_output(worker)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{worker}}{Character of length 1, name of the worker.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical of length 1, whether worker output data exists.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-list_input"></a>}}
\if{latex}{\out{\hypertarget{method-list_input}{}}}
\subsection{Method \code{list_input()}}{
List workers with input data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$list_input()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character vector of workers with input data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-list_output"></a>}}
\if{latex}{\out{\hypertarget{method-list_output}{}}}
\subsection{Method \code{list_output()}}{
List workers with output data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$list_output()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character vector of workers with output data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-delete_input"></a>}}
\if{latex}{\out{\hypertarget{method-delete_input}{}}}
\subsection{Method \code{delete_input()}}{
Delete worker input data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$delete_input(worker)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{worker}}{Character of length 1, name of the worker.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-delete_output"></a>}}
\if{latex}{\out{\hypertarget{method-delete_output}{}}}
\subsection{Method \code{delete_output()}}{
Delete worker output data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$delete_output(worker)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{worker}}{Character of length 1, name of the worker.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-path_log"></a>}}
\if{latex}{\out{\hypertarget{method-path_log}{}}}
\subsection{Method \code{path_log()}}{
Get worker log path. Not valid for all stores.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$path_log(worker)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{worker}}{Character of length 1, name of the worker.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character of length 1, path to the worker log file.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-marshal"></a>}}
\if{latex}{\out{\hypertarget{method-marshal}{}}}
\subsection{Method \code{marshal()}}{
Marshal the data store.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$marshal()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Represent the store object as a concise
character string that can be recovered
with \code{parse()} and \code{eval()} in a different R process.
}

\subsection{Returns}{
A concise character string that returns the data store
object when evaluated with \code{parse()} and \code{eval()}
in a different R process.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-destroy"></a>}}
\if{latex}{\out{\hypertarget{method-destroy}{}}}
\subsection{Method \code{destroy()}}{
Delete the files of the data store.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_store$destroy()}\if{html}{\out{</div>}}
}

\subsection{Details}{
The local files, along with the main file space,
are always deleted. Other deletions may depend on the
specific store subclass.
}

\subsection{Returns}{
\code{NULL} (invisibly).
}
}
}
