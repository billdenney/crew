% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crew_redis_server.R
\name{crew_class_redis_server}
\alias{crew_class_redis_server}
\title{Redis server class}
\description{
\code{R6} class to create Redis server objects.
}
\details{
See \code{\link[=crew_redis_server]{crew_redis_server()}} for fields and default values.
}
\examples{

## ------------------------------------------------
## Method `crew_class_redis_server$new`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$validate()
server$test() # TRUE
server$start()
server$ping() # [Redis: PONG]
server$stop()
}

## ------------------------------------------------
## Method `crew_class_redis_server$serialize`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server(password = "random")
server$serialize() # "host=127.0.0.1&port=54034&password=random"
}

## ------------------------------------------------
## Method `crew_class_redis_server$client`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$start()
client <- server$client()
client$PING() # [Redis: PONG]
server$stop()
}

## ------------------------------------------------
## Method `crew_class_redis_server$start`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$start()
server$alive() # TRUE
server$stop()
}

## ------------------------------------------------
## Method `crew_class_redis_server$stop`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$start()
server$alive() # TRUE
server$stop()
server$alive() # FALSE
}

## ------------------------------------------------
## Method `crew_class_redis_server$alive`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$start()
server$alive() # TRUE
server$stop()
server$alive() # FALSE
}

## ------------------------------------------------
## Method `crew_class_redis_server$ready`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$ready() # FALSE
server$start()
server$ready() # TRUE
server$ping() # [Redis: PONG]
server$stop()
}

## ------------------------------------------------
## Method `crew_class_redis_server$ping`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$start()
server$ping() # [Redis: PONG]
server$stop()
}

## ------------------------------------------------
## Method `crew_class_redis_server$test`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$test() # TRUE
}

## ------------------------------------------------
## Method `crew_class_redis_server$validate`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$validate() # silent
}

## ------------------------------------------------
## Method `crew_class_redis_server$configured`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$configured() # TRUE
}
}
\seealso{
Other redis: 
\code{\link{crew_redis_server}()}
}
\concept{redis}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{binary}}{Path to the Redis server executable.}

\item{\code{conf}}{Path to the Redis configuration file.}

\item{\code{host}}{IP address of the Redis host.}

\item{\code{port}}{TCP port of the Redis server.}

\item{\code{password}}{Temporary session-specific password for Redis
authentication.}

\item{\code{start_timeout}}{Number of seconds to wait for the Redis
server to start and get ready to accept connections from clients.}

\item{\code{start_wait}}{Polling interval (seconds) to wait for the Redis
server to start and get ready to accept connections from clients.}

\item{\code{process}}{\code{processx::process} object with the Redis server process.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-crew_class_redis_server-new}{\code{crew_class_redis_server$new()}}
\item \href{#method-crew_class_redis_server-finalize}{\code{crew_class_redis_server$finalize()}}
\item \href{#method-crew_class_redis_server-serialize}{\code{crew_class_redis_server$serialize()}}
\item \href{#method-crew_class_redis_server-client}{\code{crew_class_redis_server$client()}}
\item \href{#method-crew_class_redis_server-start}{\code{crew_class_redis_server$start()}}
\item \href{#method-crew_class_redis_server-stop}{\code{crew_class_redis_server$stop()}}
\item \href{#method-crew_class_redis_server-alive}{\code{crew_class_redis_server$alive()}}
\item \href{#method-crew_class_redis_server-ready}{\code{crew_class_redis_server$ready()}}
\item \href{#method-crew_class_redis_server-ping}{\code{crew_class_redis_server$ping()}}
\item \href{#method-crew_class_redis_server-test}{\code{crew_class_redis_server$test()}}
\item \href{#method-crew_class_redis_server-validate}{\code{crew_class_redis_server$validate()}}
\item \href{#method-crew_class_redis_server-configured}{\code{crew_class_redis_server$configured()}}
\item \href{#method-crew_class_redis_server-clone}{\code{crew_class_redis_server$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-new"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-new}{}}}
\subsection{Method \code{new()}}{
Redis server object constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$new(
  binary = NULL,
  conf = NULL,
  host = NULL,
  port = NULL,
  password = NULL,
  start_timeout = NULL,
  start_wait = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{binary}}{Path to the Redis server executable.}

\item{\code{conf}}{Path to the Redis configuration file.}

\item{\code{host}}{IP address of the Redis host.}

\item{\code{port}}{TCP port of the Redis server.}

\item{\code{password}}{Temporary session-specific password}

\item{\code{start_timeout}}{Seconds to wait for Redis to fully start.}

\item{\code{start_wait}}{Seconds to poll for the Redis to fully start.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An \code{R6} object handle to a Redis server.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$validate()
server$test() # TRUE
server$start()
server$ping() # [Redis: PONG]
server$stop()
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-finalize"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-finalize}{}}}
\subsection{Method \code{finalize()}}{
Clean up a Redis server object
(stop the server at garbage collection).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$finalize()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-serialize"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-serialize}{}}}
\subsection{Method \code{serialize()}}{
Represent the Redis server connection details
as a concise string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$serialize()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A length-one string representation of the Redis server
connection details.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server(password = "random")
server$serialize() # "host=127.0.0.1&port=54034&password=random"
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-client"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-client}{}}}
\subsection{Method \code{client()}}{
Create a \code{redux} Redis client object that
connects to the Redis server.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$client()}\if{html}{\out{</div>}}
}

\subsection{Details}{
The client runs on the same host as the server.
This method is intended for testing and exploratory
purposes only.
}

\subsection{Returns}{
A \code{redux::hiredis()} object that can send
transactions to the Redis server.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$start()
client <- server$client()
client$PING() # [Redis: PONG]
server$stop()
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-start"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-start}{}}}
\subsection{Method \code{start()}}{
Start a Redis server process.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$start()}\if{html}{\out{</div>}}
}

\subsection{Details}{
The Redis server object will only run one Redis
process at a time. If you call \code{start()} when the server is
already running, no new process will be created.
}

\subsection{Returns}{
\code{NULL} (invisibly).
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$start()
server$alive() # TRUE
server$stop()
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-stop"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-stop}{}}}
\subsection{Method \code{stop()}}{
Stop the active Redis server process.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$stop()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{NULL} (invisibly).
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$start()
server$alive() # TRUE
server$stop()
server$alive() # FALSE
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-alive"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-alive}{}}}
\subsection{Method \code{alive()}}{
Check if the Redis server is running.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$alive()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if the Redis server process is running,
\code{FALSE} otherwise. If the Redis server is just starting,
then the server may not be ready for new clients
even though \code{alive()} returns \code{TRUE}. The \code{ready()}
method will detect if the server can accept connections.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$start()
server$alive() # TRUE
server$stop()
server$alive() # FALSE
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-ready"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-ready}{}}}
\subsection{Method \code{ready()}}{
Check if the Redis server is running and ready
to accept connections from clients.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$ready()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if the Redis server is running and ready to
accept connections from clients. \code{FALSE} otherwise.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$ready() # FALSE
server$start()
server$ready() # TRUE
server$ping() # [Redis: PONG]
server$stop()
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-ping"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-ping}{}}}
\subsection{Method \code{ping()}}{
Ping the Redis server.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$ping()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Send a short transaction to test the connection
between the server and a new temporary client.
}

\subsection{Returns}{
An S3 object of class \code{"redis_status"} with value \code{"PONG"}.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$start()
server$ping() # [Redis: PONG]
server$stop()
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-test"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-test}{}}}
\subsection{Method \code{test()}}{
Test the Redis server.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$test()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Start the Redis server, test it on a new client with
a ping, then stop the server.
}

\subsection{Returns}{
\code{TRUE} if the test succeeded, \code{FALSE} if there were issues.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$test() # TRUE
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-validate"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-validate}{}}}
\subsection{Method \code{validate()}}{
Validate the Redis server object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$validate()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This method does not actually start the Redis server,
so the check is superficial, quick, and non-invasive.
}

\subsection{Returns}{
Nothing (invisibly). This method throws an error
if it detects any configuration problems.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$validate() # silent
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-configured"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-configured}{}}}
\subsection{Method \code{configured()}}{
Check that the fields of the \code{R6} object are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$configured()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This method does not actually start the Redis server,
so the check is superficial, quick, and non-invasive.
}

\subsection{Returns}{
\code{TRUE} if the Redis server object is configured correctly
and \code{FALSE} otherwise.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
server <- crew_redis_server()
server$configured() # TRUE
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_redis_server-clone"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_redis_server-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_redis_server$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
