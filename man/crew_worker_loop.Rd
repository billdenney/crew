% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crew_worker_loop.R
\name{crew_worker_loop}
\alias{crew_worker_loop}
\title{Worker event loop.}
\usage{
crew_worker_loop(worker, store, timeout, wait)
}
\arguments{
\item{worker}{Character of length 1, name of the worker.}

\item{store}{Marshaled \code{R6} data store object to
send/receive job data from the crew.
Constructed from the \verb{$marshal()} method of the store.
\code{eval(parse(text = store))}
should reconstruct the usable store object inside the worker event loop.}

\item{timeout}{Positive numeric of length 1, number of seconds
that a worker can idle before timing out.}

\item{wait}{Positive numeric of length 1, number of seconds
that the worker waits between checking if a job exists.}
}
\value{
\code{NULL} (invisibly).
}
\description{
Run the worker event loop.
}
\details{
The worker event loop runs inside the underlying process
of a worker. It waits for the next job (timing out
if it idles for too long at one time) runs any incoming jobs
and puts the output in the data store. If sent a shutdown job
(which throws an error of class \code{"crew_shutdown"}) then the
loop exits.
}
\examples{
dir_root <- tempfile()
dir.create(dir_root)
store <- class_store_local$new(dir_root = dir_root)
fun <- function(x) {
  x + 1
}
args <- list(x = 1)
data <- list(fun = deparse(fun), args = args, class = "crew_job")
store$write_worker_input(name = "my_worker", data = data)
try( # The worker throws a special error class when it times out.
  crew_worker_loop(
    name = "my_worker",
    store = store$marshal(),
    timeout = 0,
    wait = 0
  ),
  silent = TRUE
)
store$read_worker_output("my_worker")$value
}
